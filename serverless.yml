org: ipj31
app: hero-quest
service: hero-quest

useDotenv: true

provider:
  name: aws
  region: us-west-1
  runtime: python3.10
  stage: v1
  websocketsApiName: heroquest-sockets-${sls:stage}
  websocketsApiRouteSelectionExpression: $request.body.action
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
            - events:*
            - cloudwatch:*
          Resource: "*"
        - Effect: Allow
          Action:
            - "execute-api:ManageConnections"
          Resource: 
            - "arn:aws:execute-api:*:*:**/@connections/*"

package:
  individually: true
  patterns:
    - "!node_modules/**"
    - "!package.json"
    - "!package-lock.json"
    - "!.env"
    - "!schemas/**"

plugins:
  - serverless-python-requirements
  - serverless-dotenv-plugin

resources:
  Resources:
    sessions:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: sessions-${sls:stage}
        AttributeDefinitions:
          - AttributeName: sessionCode
            AttributeType: S
        KeySchema:
        - AttributeName: sessionCode
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

layers:
  modules:
    path: modules/testing
    compatibleRuntimes:
      - python3.10

functions:
  wws:
    name: ${sls:stage}-session-wss
    handler: lambdas/wss.main
    layers:
      # - { Ref: PythonRequirementsLambdaLayer }
      - Ref: ModulesLambdaLayer
    package:
      patterns:
        - "!lambdas/**" 
        - "lambdas/wss.py"
    events:
      - websocket:
          route: createSession
      - websocket:
          route: joinSession
      - websocket:
          route: updateDm

  # api:
  #   name: ${sls:stage}-session-api
  #   handler: lambdas/api.main
  #   layers:
  #     - Ref: PythonRequirementsLambdaLayer
  #   package:
  #     patterns:
  #       - "!lambdas/**"
  #       - "lambdas/api.py"
  #   events:
  #     - httpApi:
  #         method: POST
  #         path: "/${sls:stage}/session"

custom:
  pythonRequirements:
    dockerizePip: true
    layer:
      description: "Layer contains files and dep for python"
      compatibleRuntimes:
        - python3.8
      package:
        exclude:
          - "*/boto3/examples/*"
  cores:
    origin: "*"
    headers:
      - Content-Type
      - X-Amz-Date
      - Authorization
      - X-Api-Key
      - X-Amz-Security
      - X-Amz-User-Agent
